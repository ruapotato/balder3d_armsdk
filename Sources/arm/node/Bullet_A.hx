package arm.node;

@:access(armory.logicnode.LogicNode)@:keep class Bullet_A extends armory.logicnode.LogicTree {

	var functionNodes:Map<String, armory.logicnode.FunctionNode>;

	var functionOutputNodes:Map<String, armory.logicnode.FunctionOutputNode>;

	public function new() {
		super();
		this.functionNodes = new Map();
		this.functionOutputNodes = new Map();
		notifyOnAdd(add);
	}

	override public function add() {
		var _SendGlobalEvent = new armory.logicnode.SendGlobalEventNode(this);
		_SendGlobalEvent.preallocInputs(2);
		_SendGlobalEvent.preallocOutputs(1);
		var _RemoveObject_001 = new armory.logicnode.RemoveObjectNode(this);
		_RemoveObject_001.preallocInputs(4);
		_RemoveObject_001.preallocOutputs(1);
		var _RemoveObjectfromCollection = new armory.logicnode.RemoveObjectFromGroupNode(this);
		_RemoveObjectfromCollection.preallocInputs(3);
		_RemoveObjectfromCollection.preallocOutputs(1);
		var _IsFalse = new armory.logicnode.IsFalseNode(this);
		_IsFalse.preallocInputs(2);
		_IsFalse.preallocOutputs(1);
		var _Gate = new armory.logicnode.GateNode(this);
		_Gate.property0 = "Less Equal";
		_Gate.property1 = 9.999999747378752e-05;
		_Gate.preallocInputs(3);
		_Gate.preallocOutputs(2);
		var _SetObjectProperty = new armory.logicnode.SetPropertyNode(this);
		_SetObjectProperty.preallocInputs(4);
		_SetObjectProperty.preallocOutputs(1);
		var _IsTrue = new armory.logicnode.IsTrueNode(this);
		_IsTrue.preallocInputs(2);
		_IsTrue.preallocOutputs(1);
		var _ArrayLoop = new armory.logicnode.ArrayLoopNode(this);
		_ArrayLoop.preallocInputs(2);
		_ArrayLoop.preallocOutputs(4);
		var _OnContactArray = new armory.logicnode.OnContactArrayNode(this);
		_OnContactArray.property0 = "begin";
		_OnContactArray.preallocInputs(2);
		_OnContactArray.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _OnContactArray, 0, 0);
		var _GetCollection = new armory.logicnode.GetGroupNode(this);
		_GetCollection.preallocInputs(1);
		_GetCollection.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.StringNode(this, "active"), _GetCollection, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetCollection, _OnContactArray, 0, 1);
		armory.logicnode.LogicNode.addLink(_OnContactArray, _ArrayLoop, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetCollection, _ArrayLoop, 0, 1);
		armory.logicnode.LogicNode.addLink(_ArrayLoop, new armory.logicnode.IntegerNode(this, 0), 2, 0);
		armory.logicnode.LogicNode.addLink(_ArrayLoop, new armory.logicnode.NullNode(this), 3, 0);
		armory.logicnode.LogicNode.addLink(_ArrayLoop, _IsTrue, 0, 0);
		var _HasContact = new armory.logicnode.HasContactNode(this);
		_HasContact.preallocInputs(2);
		_HasContact.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _HasContact, 0, 0);
		armory.logicnode.LogicNode.addLink(_ArrayLoop, _HasContact, 1, 1);
		armory.logicnode.LogicNode.addLink(_HasContact, _IsTrue, 0, 1);
		armory.logicnode.LogicNode.addLink(_IsTrue, _SetObjectProperty, 0, 0);
		armory.logicnode.LogicNode.addLink(_ArrayLoop, _SetObjectProperty, 1, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.StringNode(this, "life"), _SetObjectProperty, 0, 2);
		var _Math = new armory.logicnode.MathNode(this);
		_Math.property0 = "Subtract";
		_Math.property1 = false;
		_Math.preallocInputs(2);
		_Math.preallocOutputs(1);
		var _GetObjectProperty_001 = new armory.logicnode.GetPropertyNode(this);
		_GetObjectProperty_001.preallocInputs(2);
		_GetObjectProperty_001.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_ArrayLoop, _GetObjectProperty_001, 1, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.StringNode(this, "life"), _GetObjectProperty_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_GetObjectProperty_001, new armory.logicnode.StringNode(this, ""), 1, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectProperty_001, _Math, 0, 0);
		var _GetObjectProperty_003 = new armory.logicnode.GetPropertyNode(this);
		_GetObjectProperty_003.preallocInputs(2);
		_GetObjectProperty_003.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _GetObjectProperty_003, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.StringNode(this, "damage"), _GetObjectProperty_003, 0, 1);
		armory.logicnode.LogicNode.addLink(_GetObjectProperty_003, new armory.logicnode.StringNode(this, ""), 1, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectProperty_003, _Math, 0, 1);
		armory.logicnode.LogicNode.addLink(_Math, _SetObjectProperty, 0, 3);
		armory.logicnode.LogicNode.addLink(_SetObjectProperty, _Gate, 0, 0);
		armory.logicnode.LogicNode.addLink(_Math, _Gate, 0, 1);
		var _Float = new armory.logicnode.FloatNode(this);
		_Float.preallocInputs(1);
		_Float.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _Float, 0, 0);
		armory.logicnode.LogicNode.addLink(_Float, _Gate, 0, 2);
		armory.logicnode.LogicNode.addLink(_Gate, new armory.logicnode.NullNode(this), 1, 0);
		armory.logicnode.LogicNode.addLink(_Gate, _IsFalse, 0, 0);
		var _StringContains = new armory.logicnode.ContainsStringNode(this);
		_StringContains.property0 = "Contains";
		_StringContains.preallocInputs(2);
		_StringContains.preallocOutputs(1);
		var _GetObjectName = new armory.logicnode.GetNameNode(this);
		_GetObjectName.preallocInputs(1);
		_GetObjectName.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_ArrayLoop, _GetObjectName, 1, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectName, _StringContains, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.StringNode(this, "player"), _StringContains, 0, 1);
		armory.logicnode.LogicNode.addLink(_StringContains, _IsFalse, 0, 1);
		armory.logicnode.LogicNode.addLink(_IsFalse, _RemoveObjectfromCollection, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.StringNode(this, "active"), _RemoveObjectfromCollection, 0, 1);
		armory.logicnode.LogicNode.addLink(_ArrayLoop, _RemoveObjectfromCollection, 1, 2);
		armory.logicnode.LogicNode.addLink(_RemoveObjectfromCollection, _RemoveObject_001, 0, 0);
		armory.logicnode.LogicNode.addLink(_ArrayLoop, _RemoveObject_001, 1, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, true), _RemoveObject_001, 0, 2);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, true), _RemoveObject_001, 0, 3);
		armory.logicnode.LogicNode.addLink(_RemoveObject_001, _SendGlobalEvent, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.StringNode(this, "AI_DOWN"), _SendGlobalEvent, 0, 1);
		armory.logicnode.LogicNode.addLink(_SendGlobalEvent, new armory.logicnode.NullNode(this), 0, 0);
		var _RemoveObject = new armory.logicnode.RemoveObjectNode(this);
		_RemoveObject.preallocInputs(4);
		_RemoveObject.preallocOutputs(1);
		var _OnTimer = new armory.logicnode.OnTimerNode(this);
		_OnTimer.preallocInputs(2);
		_OnTimer.preallocOutputs(1);
		var _GetObjectProperty = new armory.logicnode.GetPropertyNode(this);
		_GetObjectProperty.preallocInputs(2);
		_GetObjectProperty.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _GetObjectProperty, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.StringNode(this, "timeToLive"), _GetObjectProperty, 0, 1);
		armory.logicnode.LogicNode.addLink(_GetObjectProperty, new armory.logicnode.StringNode(this, ""), 1, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectProperty, _OnTimer, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _OnTimer, 0, 1);
		armory.logicnode.LogicNode.addLink(_OnTimer, _RemoveObject, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _RemoveObject, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, true), _RemoveObject, 0, 2);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, true), _RemoveObject, 0, 3);
		armory.logicnode.LogicNode.addLink(_RemoveObject, new armory.logicnode.NullNode(this), 0, 0);
	}
}