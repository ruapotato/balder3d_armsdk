// Auto-generated
let project = new Project('balder3d_1_0_124');

project.addSources('Sources');
project.addLibrary("/home/david/myProjects/balder3d/armsdk/armory");
project.addLibrary("/home/david/myProjects/balder3d/armsdk/iron");
project.addLibrary("/home/david/myProjects/balder3d/armsdk/lib/haxebullet");
project.addParameter('-dce full');
project.addParameter('armory.trait.WalkNavigation');
project.addParameter("--macro keep('armory.trait.WalkNavigation')");
project.addParameter('arm.node.Player');
project.addParameter("--macro keep('arm.node.Player')");
project.addParameter('arm.node.AI');
project.addParameter("--macro keep('arm.node.AI')");
project.addParameter('arm.node.Menu');
project.addParameter("--macro keep('arm.node.Menu')");
project.addParameter('armory.trait.physics.bullet.PhysicsWorld');
project.addParameter("--macro keep('armory.trait.physics.bullet.PhysicsWorld')");
project.addParameter('arm.node.Bullet_A');
project.addParameter("--macro keep('arm.node.Bullet_A')");
project.addParameter('armory.trait.physics.bullet.RigidBody');
project.addParameter("--macro keep('armory.trait.physics.bullet.RigidBody')");
project.addParameter('arm.node.AddItems');
project.addParameter("--macro keep('arm.node.AddItems')");
project.addParameter('armory.trait.internal.CanvasScript');
project.addParameter("--macro keep('armory.trait.internal.CanvasScript')");
project.addParameter('arm.node.Item_box');
project.addParameter("--macro keep('arm.node.Item_box')");
project.addParameter('arm.node.Addplayer');
project.addParameter("--macro keep('arm.node.Addplayer')");
project.addParameter('arm.node.Player_spawn');
project.addParameter("--macro keep('arm.node.Player_spawn')");
project.addParameter('armory.trait.internal.UniformsManager');
project.addParameter("--macro keep('armory.trait.internal.UniformsManager')");
project.addShaders("build_balder3d/compiled/Shaders/*.glsl", { noembed: false});
project.addAssets("build_balder3d/compiled/Assets/**", { notinlist: true , destination: "data/{name}"});
project.addAssets("build_balder3d/compiled/Shaders/*.arm", { notinlist: true , destination: "data/{name}"});
project.addAssets("/home/david/myProjects/balder3d/armsdk/armory/Assets/brdf.png", { notinlist: true , destination: "data/{name}"});
project.addAssets("/home/david/myProjects/balder3d/armsdk/armory/Assets/smaa_area.png", { notinlist: true , destination: "data/{name}"});
project.addAssets("/home/david/myProjects/balder3d/armsdk/armory/Assets/smaa_search.png", { notinlist: true , destination: "data/{name}"});
project.addAssets("Bundled/canvas/_themes.json", { notinlist: true , destination: "data/{name}"});
project.addAssets("Bundled/canvas/interface.files", { notinlist: true , destination: "data/{name}"});
project.addAssets("Bundled/canvas/interface.json", { notinlist: true , destination: "data/{name}"});
project.addAssets("Bundled/canvas/main_menu.files", { notinlist: true , destination: "data/{name}"});
project.addAssets("Bundled/canvas/main_menu.json", { notinlist: true , destination: "data/{name}"});
project.addLibrary("/home/david/myProjects/balder3d/armsdk/lib/zui");
project.addAssets("/home/david/myProjects/balder3d/armsdk/armory/Assets/font_default.ttf", { notinlist: false , destination: "data/{name}"});
project.addDefine('arm_deferred');
project.addDefine('arm_csm');
project.addDefine('rp_hdr');
project.addDefine('rp_renderer=Deferred');
project.addDefine('rp_shadowmap');
project.addDefine('rp_shadowmap_cascade=1024');
project.addDefine('rp_shadowmap_cube=512');
project.addDefine('rp_background=World');
project.addDefine('rp_render_to_texture');
project.addDefine('rp_compositornodes');
project.addDefine('rp_antialiasing=SMAA');
project.addDefine('rp_supersampling=1');
project.addDefine('rp_ssgi=SSAO');
project.addDefine('rp_gbuffer_emission');
project.addDefine('arm_physics');
project.addDefine('arm_bullet');
project.addDefine('arm_published');
project.addDefine('arm_data_dir');
project.addDefine('arm_soundcompress');
project.addDefine('arm_audio');
project.addDefine('arm_ui');
project.addDefine('arm_skin');
project.addDefine('arm_morph_target');
project.addDefine('arm_particles');
project.addDefine('arm_loadscreen');
project.addDefine('armory');


resolve(project);
