// Generated by HLC 4.2.5 (HL v4)
#ifndef INC_iron__data__MaterialData
#define INC_iron__data__MaterialData
typedef struct _iron__data__$MaterialData *iron__data__$MaterialData;
typedef struct _iron__data__MaterialData *iron__data__MaterialData;
#include <iron/data/TMaterialData.h>
#include <iron/data/MaterialData.h>
#include <hl/types/ArrayBytes_Int.h>
#include <_std/String.h>
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <iron/data/ShaderData.h>
#include <hl/types/ArrayObj.h>


typedef struct {
	HL__ENUM_CONSTRUCT__
	iron__data__TMaterialData p0;
	vclosure* p1;
	iron__data__MaterialData p2;
} Enumt$ctx_0da146a;
typedef struct {
	HL__ENUM_CONSTRUCT__
	iron__data__TMaterialData p0;
	vclosure* p1;
	iron__data__MaterialData p2;
	hl__types__ArrayBytes_Int p3;
	int p4;
} Enumt$ctx_955f890;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
	String p1;
	vclosure* p2;
} Enumt$ctx_6e52869;
struct _iron__data__$MaterialData {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	int uidCounter;
	vclosure* parse;
};
struct _iron__data__MaterialData {
	hl_type *$type;
	double uid;
	String name;
	iron__data__TMaterialData raw;
	iron__data__ShaderData shader;
	hl__types__ArrayObj contexts;
};
#endif

