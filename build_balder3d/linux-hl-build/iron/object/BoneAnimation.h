// Generated by HLC 4.2.5 (HL v4)
#ifndef INC_iron__object__BoneAnimation
#define INC_iron__object__BoneAnimation
typedef struct _iron__object__$BoneAnimation *iron__object__$BoneAnimation;
typedef struct _iron__object__BoneAnimation *iron__object__BoneAnimation;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <iron/math/Mat4.h>
#include <iron/math/Vec4.h>
#include <iron/math/Quat.h>
#include <iron/object/Animation.h>
#include <iron/data/Armature.h>
#include <haxe/ds/StringMap.h>
#include <iron/object/MeshObject.h>
#include <iron/data/MeshData.h>
#include <kha/arrays/ByteArrayPrivate.h>
#include <hl/types/ArrayObj.h>
#include <hl/types/ArrayBytes_Int.h>
#include <haxe/ds/ObjectMap.h>


struct _iron__object__$BoneAnimation {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	int skinMaxBones;
	iron__math__Mat4 m;
	iron__math__Mat4 m1;
	iron__math__Mat4 m2;
	iron__math__Vec4 vpos;
	iron__math__Vec4 vscl;
	iron__math__Quat q1;
	iron__math__Quat q2;
	iron__math__Quat q3;
	iron__math__Vec4 vpos2;
	iron__math__Vec4 vscl2;
	iron__math__Vec4 v1;
	iron__math__Vec4 v2;
};
struct _iron__object__BoneAnimation {
	hl_type *$type;
	bool isSkinned;
	bool isSampled;
	String action;
	iron__data__Armature armature;
	float time;
	float speed;
	bool loop;
	int frameIndex;
	vclosure* onComplete;
	bool paused;
	float frameTime;
	float blendTime;
	float blendCurrent;
	String blendAction;
	float blendFactor;
	int lastFrameIndex;
	haxe__ds__StringMap markerEvents;
	iron__object__MeshObject object;
	iron__data__MeshData data;
	kha__arrays__ByteArrayPrivate skinBuffer;
	hl__types__ArrayObj skeletonBones;
	hl__types__ArrayObj skeletonMats;
	hl__types__ArrayObj skeletonBonesBlend;
	hl__types__ArrayObj skeletonMatsBlend;
	hl__types__ArrayObj absMats;
	hl__types__ArrayObj applyParent;
	hl__types__ArrayObj matsFast;
	hl__types__ArrayBytes_Int matsFastSort;
	hl__types__ArrayObj matsFastBlend;
	hl__types__ArrayBytes_Int matsFastBlendSort;
	haxe__ds__StringMap boneChildren;
	hl__types__ArrayObj constraintTargets;
	hl__types__ArrayObj constraintTargetsI;
	haxe__ds__ObjectMap constraintMats;
	bool relativeBoneConstraints;
	hl__types__ArrayObj onUpdates;
};
#endif

