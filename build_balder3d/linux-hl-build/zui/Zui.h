// Generated by HLC 4.2.5 (HL v4)
#ifndef INC_zui__Zui
#define INC_zui__Zui
typedef struct _zui__$Zui *zui__$Zui;
typedef struct _zui__Zui *zui__Zui;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/types/ArrayObj.h>
#include <hl/types/ArrayBytes_Float.h>
#include <kha/graphics2/Graphics.h>
#include <kha/Image.h>
#include <kha/Kravur.h>
#include <kha/graphics4/PipelineState.h>
#include <zui/Handle.h>
#include <hl/types/ArrayBytes_Int.h>


struct _zui__$Zui {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	zui__Zui current;
	vclosure* onTextHover;
	vclosure* onDeselectText;
	bool alwaysRedrawWindow;
	bool keyRepeat;
	bool dynamicGlyphLoad;
	bool touchScroll;
	bool touchHold;
	bool touchTooltip;
	double keyRepeatTime;
	String textToPaste;
	String textToCopy;
	bool isCut;
	bool isCopy;
	bool isPaste;
	zui__Zui copyReceiver;
	int copyFrame;
	bool comboFirst;
	vclosure* extractColoring;
	vclosure* checkStart;
};
struct _zui__Zui {
	hl_type *$type;
	bool isScrolling;
	bool isTyping;
	bool enabled;
	bool isStarted;
	bool isPushed;
	bool isHovered;
	bool isReleased;
	bool changed;
	bool imageInvertY;
	bool scrollEnabled;
	bool highlightOnSelect;
	bool tabSwitchEnabled;
	vvirtual* textColoring;
	int windowBorderTop;
	int windowBorderBottom;
	int windowBorderRight;
	bool highlightFullRow;
	bool touchHoldActivated;
	bool sliderTooltip;
	double sliderTooltipX;
	double sliderTooltipY;
	double sliderTooltipW;
	bool inputRegistered;
	bool inputEnabled;
	double inputX;
	double inputY;
	double inputStartedX;
	double inputStartedY;
	double inputDX;
	double inputDY;
	int inputWheelDelta;
	bool inputStarted;
	bool inputStartedR;
	bool inputReleased;
	bool inputReleasedR;
	bool inputDown;
	bool inputDownR;
	bool penInUse;
	bool isKeyPressed;
	bool isKeyDown;
	bool isShiftDown;
	bool isCtrlDown;
	bool isAltDown;
	bool isADown;
	bool isBackspaceDown;
	bool isDeleteDown;
	bool isEscapeDown;
	bool isReturnDown;
	bool isTabDown;
	vdynamic* key;
	String _char;
	double inputStartedTime;
	int cursorX;
	int highlightAnchor;
	hl__types__ArrayBytes_Float ratios;
	int curRatio;
	double xBeforeSplit;
	int wBeforeSplit;
	kha__graphics2__Graphics g;
	vvirtual* _t;
	vvirtual* ops;
	kha__graphics2__Graphics globalG;
	kha__graphics4__PipelineState rtTextPipeline;
	int fontSize;
	double fontOffsetY;
	double arrowOffsetX;
	double arrowOffsetY;
	double titleOffsetX;
	double buttonOffsetY;
	double checkOffsetX;
	double checkOffsetY;
	double checkSelectOffsetX;
	double checkSelectOffsetY;
	double radioOffsetX;
	double radioOffsetY;
	double radioSelectOffsetX;
	double radioSelectOffsetY;
	double scrollAlign;
	bool imageScrollAlign;
	double _x;
	double _y;
	int _w;
	int _h;
	double _windowX;
	double _windowY;
	double _windowW;
	double _windowH;
	zui__Handle currentWindow;
	bool windowEnded;
	zui__Handle scrollHandle;
	double windowHeaderW;
	double windowHeaderH;
	double restoreX;
	double restoreY;
	zui__Handle textSelectedHandle;
	String textSelected;
	zui__Handle submitTextHandle;
	String textToSubmit;
	bool tabPressed;
	zui__Handle tabPressedHandle;
	zui__Handle comboSelectedHandle;
	zui__Handle comboSelectedWindow;
	int comboSelectedAlign;
	hl__types__ArrayObj comboSelectedTexts;
	String comboSelectedLabel;
	int comboSelectedX;
	int comboSelectedY;
	int comboSelectedW;
	bool comboSearchBar;
	zui__Handle submitComboHandle;
	int comboToSubmit;
	int comboInitialValue;
	String tooltipText;
	kha__Image tooltipImg;
	vdynamic* tooltipImgMaxWidth;
	bool tooltipInvertY;
	double tooltipX;
	double tooltipY;
	bool tooltipShown;
	bool tooltipWait;
	double tooltipTime;
	hl__types__ArrayObj tabNames;
	hl__types__ArrayBytes_Int tabColors;
	zui__Handle tabHandle;
	double tabScroll;
	bool tabVertical;
	bool scissor;
	bool elementsBaked;
	kha__Image checkSelectImage;
};
#endif

