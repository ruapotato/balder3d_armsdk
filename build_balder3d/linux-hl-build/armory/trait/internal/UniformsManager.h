// Generated by HLC 4.2.5 (HL v4)
#ifndef INC_armory__trait__internal__UniformsManager
#define INC_armory__trait__internal__UniformsManager
typedef struct _armory__trait__internal__$UniformsManager *armory__trait__internal__$UniformsManager;
typedef struct _armory__trait__internal__UniformsManager *armory__trait__internal__UniformsManager;
#include <iron/data/MaterialData.h>
#include <iron/data/TTextureUnit.h>
#include <iron/object/Object.h>
#include <armory/trait/internal/UniformsManager.h>
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <haxe/ds/ObjectMap.h>
#include <iron/math/Vec4.h>
#include <kha/Image.h>
#include <iron/Trait.h>
#include <hl/types/ArrayObj.h>


typedef struct {
	HL__ENUM_CONSTRUCT__
	iron__data__MaterialData p0;
	iron__data__TTextureUnit p1;
	iron__object__Object p2;
} Enumt$ctx_b780948;
struct _armory__trait__internal__$UniformsManager {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	bool floatsRegistered;
	haxe__ds__ObjectMap floatsMap;
	bool vectorsRegistered;
	haxe__ds__ObjectMap vectorsMap;
	bool texturesRegistered;
	haxe__ds__ObjectMap texturesMap;
	bool sceneRemoveInitalized;
	vclosure* removeScene;
	vclosure* _register;
	vclosure* registerShaderUniforms;
	vclosure* setFloatValue;
	vclosure* setVec3Value;
	vclosure* setTextureValue;
	vclosure* floatLink;
	vclosure* getObjectFloatLink;
	vclosure* vec3Link;
	vclosure* getObjectVec3Link;
	vclosure* textureLink;
	vclosure* getObjectTextureLink;
	vclosure* getFloatsMap;
	vclosure* getVectorsMap;
	vclosure* getTexturesMap;
	vclosure* removeObjectFromAllMaps;
	vclosure* removeObjectFromMap;
	vclosure* removeFloatValue;
	vclosure* removeVectorValue;
	vclosure* removeTextureValue;
};
struct _armory__trait__internal__UniformsManager {
	hl_type *$type;
	iron__object__Object object;
	hl__types__ArrayObj _add;
	hl__types__ArrayObj _init;
	hl__types__ArrayObj _remove;
	hl__types__ArrayObj _update;
	hl__types__ArrayObj _lateUpdate;
	hl__types__ArrayObj _render;
	hl__types__ArrayObj _render2D;
	bool uniformExists;
};
#endif

