// Generated by HLC 4.2.5 (HL v4)
#ifndef INC_armory__trait__physics__bullet__RigidBody
#define INC_armory__trait__physics__bullet__RigidBody
typedef struct _armory__trait__physics__bullet__$RigidBody *armory__trait__physics__bullet__$RigidBody;
typedef struct _armory__trait__physics__bullet__RigidBody *armory__trait__physics__bullet__RigidBody;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <iron/math/Quat.h>
#include <haxe/ds/ObjectMap.h>
#include <iron/Trait.h>
#include <iron/object/Object.h>
#include <hl/types/ArrayObj.h>
#include <armory/trait/physics/bullet/PhysicsWorld.h>
#include <iron/object/Transform.h>
#include <hl/types/ArrayBytes_Float.h>
#include <haxe/io/Bytes.h>


struct _armory__trait__physics__bullet__$RigidBody {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	int nextId;
	bool nullvec;
	vbyte* vec1;
	vbyte* vec2;
	vbyte* vec3;
	vbyte* quat1;
	vbyte* trans1;
	vbyte* trans2;
	iron__math__Quat quat;
	int CF_STATIC_OBJECT;
	int CF_KINEMATIC_OBJECT;
	int CF_NO_CONTACT_RESPONSE;
	int CF_CHARACTER_OBJECT;
	haxe__ds__ObjectMap convexHullCache;
	haxe__ds__ObjectMap triangleMeshCache;
	haxe__ds__ObjectMap usersCache;
};
struct _armory__trait__physics__bullet__RigidBody {
	hl_type *$type;
	iron__object__Object object;
	hl__types__ArrayObj _add;
	hl__types__ArrayObj _init;
	hl__types__ArrayObj _remove;
	hl__types__ArrayObj _update;
	hl__types__ArrayObj _lateUpdate;
	hl__types__ArrayObj _render;
	hl__types__ArrayObj _render2D;
	int shape;
	armory__trait__physics__bullet__PhysicsWorld physics;
	iron__object__Transform transform;
	double mass;
	double friction;
	double angularFriction;
	double restitution;
	double collisionMargin;
	double linearDamping;
	double angularDamping;
	bool animated;
	bool staticObj;
	bool destroyed;
	hl__types__ArrayBytes_Float linearFactors;
	hl__types__ArrayBytes_Float angularFactors;
	bool useDeactivation;
	hl__types__ArrayBytes_Float deactivationParams;
	bool ccd;
	int group;
	int mask;
	bool trigger;
	double bodyScaleX;
	double bodyScaleY;
	double bodyScaleZ;
	double currentScaleX;
	double currentScaleY;
	double currentScaleZ;
	vbyte* meshInterface;
	vbyte* body;
	vbyte* motionState;
	vbyte* btshape;
	bool ready;
	int id;
	vclosure* onReady;
	hl__types__ArrayObj onContact;
	haxe__io__Bytes heightData;
};
#endif

