// Generated by HLC 4.2.5 (HL v4)
#ifndef INC_armory__trait__physics__bullet__PhysicsConstraint
#define INC_armory__trait__physics__bullet__PhysicsConstraint
typedef struct _armory__trait__physics__bullet__$PhysicsConstraint *armory__trait__physics__bullet__$PhysicsConstraint;
typedef struct _armory__trait__physics__bullet__PhysicsConstraint *armory__trait__physics__bullet__PhysicsConstraint;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <iron/Trait.h>
#include <iron/object/Object.h>
#include <hl/types/ArrayObj.h>
#include <armory/trait/physics/bullet/PhysicsWorld.h>
#include <hl/types/ArrayBytes_Float.h>


struct _armory__trait__physics__bullet__$PhysicsConstraint {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	int nextId;
	bool nullvec;
	vbyte* vec1;
	vbyte* vec2;
	vbyte* vec3;
	vbyte* trans1;
	vbyte* trans2;
};
struct _armory__trait__physics__bullet__PhysicsConstraint {
	hl_type *$type;
	iron__object__Object object;
	hl__types__ArrayObj _add;
	hl__types__ArrayObj _init;
	hl__types__ArrayObj _remove;
	hl__types__ArrayObj _update;
	hl__types__ArrayObj _lateUpdate;
	hl__types__ArrayObj _render;
	hl__types__ArrayObj _render2D;
	int id;
	armory__trait__physics__bullet__PhysicsWorld physics;
	iron__object__Object body1;
	iron__object__Object body2;
	int type;
	bool disableCollisions;
	double breakingThreshold;
	hl__types__ArrayBytes_Float limits;
	vbyte* con;
};
#endif

